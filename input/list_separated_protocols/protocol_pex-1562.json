[
    "\n<p><strong>Panel sequencing of early-stage NSCLC cohort: data analysis</strong></p><p>BALSAMIC workflow v4.0.0<sup>1</sup> was used to analyze each of the FASTQ files. In summary, we first quality controlled FASTQ files using FastQC v0.11.5<sup>2</sup>. Adapter sequences and low-quality bases were trimmed using fastp v0.20.0<sup>3</sup>. Trimmed reads were mapped to the reference genome hg19 using BWA MEM v0.7.15<sup>4</sup>. The resulted SAM files were converted to BAM files and sorted using samtools v1.6<sup>5,6</sup>. Duplicated reads were marked using Picard tools MarkDuplicate v2.17.0 and promptly quality controlled using CollectHsMetrics, CollectInsertSizeMetrics, and CollectAlignmentSummaryMetrics functionalities. Results of the quality-controlled steps were summarized by MultiQC v1.7<sup>7</sup>. For each sample, somatic mutations were called using VarDict v2019.06.04<sup>8</sup> in tumor-only mode and annotated using Ensembl VEP v94.5<sup>9</sup>. Variants recurrently found (more than 10 cases) in the cohort and not previously described as oncogenic were manually reviewed to detect likely artifacts, which were removed from downstream analyses together with variants showing low quality calls. Variants were classified as putative functional versus passengers by using the interpretation pipeline developed by the Molecular Tumor Board Portal (accessed 2/2020), a clinical decision support tool that evaluates the functional and predictive relevance of genomic alterations<sup>10</sup>. Briefly, the portal classifies a variant as biologically relevant combining up-to-date results from clinical and preclinical studies, bona fide biological assumptions and bioinformatics calculations.&nbsp;</p><p>For tumor mutational load calculations, first all low-quality variants were removed via a hard filter of total read depth (DP) &gt; 50 and alternative allele depth (AD) &gt;",
    {
        "title": "5.",
        "body": [
            "Thereafter, we followed the procedure demonstrated by Chalmers et al<sup>11</sup>.</p><p><br></p><p><strong>Downstream analysis of proteomics and proteogenomics data</strong></p><p><em>Cancer- and driver-related proteins (CDRPs)</em></p><p>CDRPs were defined based on membership in 10 cancer-related signaling pathways as previously described<sup>12</sup>, and/or if causally linked to cancer according to the COSMIC cancer gene census effort<sup>13</sup>. In total 832 CDRPs were identified and quantified in the current early-stage NSCLC cohort. CDRP annotation was performed using previously published information related to protein function as transcription factors, chromatin remodeling factor or transcription factor co-factor according to AnimalTFdb<sup>14</sup>; protein kinase<sup>15</sup>; protein phosphatase<sup>16</sup>; ubiquitin E3 ligase<sup>17</sup>; protein subcellular localization according to SubCellBarCode resource (www.subcellbarcode.org)<sup>18</sup>; and annotation as drug target<sup>19</sup>.</p><p><em>Proteogenomics 6FT search</em></p><p>The IPAW proteogenomics pipeline for novel peptides was implemented as previously described<sup>20</sup>. Novel peptides from the 6-reading frame translation (6FT) search that passed SpectrumAI filter in the majority of TMT sets and lacked a SNPdb match were retained for outlier detection. Assuming that such peptides should be present in one or in a few samples and that the per set quantification depends on the sample composition, ratios to the reference pool were re-centered by the median and log2 transformed. Outlying peptides were determined by the same threshold used for the cancer-testis antigen analysis (<em>i.e.</em>, ratio > 3).</p><p>Peptides from the 6FT search were further annotated with ANNOVAR<sup>21</sup> (genes: RefSeq<sup>22</sup>, UCSC<sup>23</sup>, ENSEMBL<sup>24</sup>, GENCODE<sup>25</sup> hg19; long non-coding RNAs: LNCipedia v.5.2<sup>26</sup>, gencode.v34.long_noncoding_RNAs after liftOver from hg38 to hg19 coordinates , pseudogenes:  gencode.v34.2wayconspseudos<sup>27</sup> after liftOver from hg38 to hg19 coordinates), a custom-made script for alternative open reading frame identification, and Uniprot<sup>28</sup> protein names (release 03/2020) for transposable elements assignment according to the blastp protein ID. Annotations were prioritized similar to ANNOVAR precedence rules with emphasis on the exon translation complexity (<em>AltOrf</em> -alternative opening reading frame) and the putative origin of the peptides (<em>ERV</em> -endogenous retro-viral elements, pseudogenes): <em>AltOrf, ERV, pseudogene, exonic, splicing, ncRNA_exonic, ncRNA_splicing, ncRNA_intronic, lncrna, UTR5, UTR3, UTR5;UTR3, intronic, upstream, downstream, upstream;downstream, intergenic.</em></p><p><br></p><p><strong>Machine-learning based classifiers for NSCLC proteomics data</strong></p><p><em>Support-vector machine (SVM)-based cohort classifier</em></p><p>For an initial filtering to remove uninformative proteins (features) and to reduce computation time for downstream analysis, we applied DEqMS<sup>29</sup> as in Lehtiö et al. (associated publication) (BH adjusted p-value < 0.01 and |log2(ratio)| > 0.5, 5,872 proteins). Next, for a balanced first selection of features, for each comparison, the most upregulated and downregulated 200 (100 ×",
            {
                "title": "2)",
                "body": "proteins were included, resulting in a list of 1,549 proteins after removal of redundant proteins.<em>    </em></p><p>Support-vector machine with linear kernel was used to build the classifier using scikit-learn library (v0.21.2) in Python (version 3)<sup>30</sup>. Numpy (v1.17.4) was used for data manipulation and operation.Hyperparameter C and the model was optimized using 5-fold cross-validation.</p><p>Due to data-availability constraints in this study, we used the Monte Carlo cross-validation (MCCV) method<sup>31</sup> to provide an unbiased performance estimation and to optimize the model. The whole process (described below) was repeated 100 times to maximize the number of samples included in training and testing. From each iteration, the testing performance (accuracy) and 200 most important features were reported.</p><p>First, we partitioned the dataset randomly into two parts: 80% for training and 20% for testing. To select the most important features in each iteration, support-vector machine-recursive feature elimination (SVM-RFE) algorithm was applied<sup>32</sup>. The algorithm was implemented using scikit-learn library (v0.21.2) in python (version 3)<sup>30</sup>. The model with the 200 most important features was then applied to the testing data to estimate the accuracy.</p><p>Finally, the overall accuracy was reported as the average accuracy from the 100 MCCV iterations, and we selected the most frequently used 200 features from the output of MCCV (100 iterations) to build the final model and deploy it.  </p><p><em>Applying SVM classifier to external data</em></p><p>As the model was built on normalized proteomics data, training and testing data should be in the same scale in order to estimate the evaluation of the model robustly. Therefore, the model was built on Z-score-distributed data and the external data (GEO<sup>33</sup>, TCGA<sup>34</sup>, and Gillette et al.<sup>35</sup>) were transformed to Z-score distribution.</p><p><em>k-Top Scoring Pairs (k-TSP)-based single-sample classifier </em></p><p>The k-TSP algorithm<sup>36</sup>, developed for solving binary classification problems, was used here for development of a diagnostic single-sample classifier intended for a clinical setting. The classifier was trained and applied on label-free data-independent acquisition mass spectrometry (DIA-MS) data generated as described in Lehtiö et al. (associated publication). To remove samples with low-quality DIA data, sample-wise correlation (Spearman) analysis between the in-depth TMT-HiRIEF-LC-MS-DDA data (Lehtiö et al. associated publication) and the DIA-MS analysis was performed for overlapping proteins. This analysis revealed five samples with low correlation, possibly due to low amounts of available starting material for the DIA-MS analysis, and these samples were excluded from downstream analysis.</p><p>For an initial filtering to remove uninformative proteins (features) and to reduce computation time for downstream analysis, we applied DEqMS<sup>29</sup> as described above (BH adjusted p-value < 0.01 and |log2(FC)| > 0.5). Comparison between differentially abundant 5,872 proteins and the 6,717 proteins identified in the DIA analysis resulted in an overlap of 3,028 proteins.</p><p>Missing values in DIA data were imputed by filling baselines signals for each protein, individually. We assumed that any resulting missing value was due to the lack of protein abundance in the sample. Therefore, we imputed the missing values with baseline signals instead of inferring the missing value based on protein abundance of other samples. We sampled value from a Gaussian distribution N(μ, σ) where μ is half of the minimum MS1 peak area of the protein abundance and σ is 2 in order to replace missing values with baseline signals for each sample independently.</p><p>Protein-wise correlation (Spearman and Pearson) between TMT-HiRIEF-LC-MS-DDA and imputed DIA-MS was computed for these 3,028 proteins, and proteins with greater than 0.3 Spearman and 0.5 Pearson correlations were included, resulting in a list of 2003 proteins. Next, for each comparison, the most upregulated and downregulated 100 (50 ×"
            },
            {
                "title": "2)",
                "body": [
                    "proteins were included in subsequent analysis resulting in a list of 760 proteins.</p><p>For k-TSP classification, we modified the ‘switchbox’ R package (v1.24.0)<sup>37</sup> for multi-class classification problems. The only parameter to tune is the number of feature pairs (k) used in the k-TSP algorithm (optimized k =",
                    {
                        "title": "13).",
                        "body": "One-versus-one classifiers were built to classify samples (in total 15 classifiers for the 6 subtypes), and for each classifier the sample was classified into either of the subtypes. Consequently, each sample was classified 15 times and the final decision was made based on a majority vote. In case of a tie in classifications, direct comparison between the subtypes with the highest equal votes determined the final classification. When there was a tie between direct subtypes comparison, the sample was labeled “unclassified” to prevent final ambiguous calls.</p><p>As for the SVM classifier we used the MCCV method<sup>31</sup> to provide an unbiased performance estimation and to optimize the classifier. The whole process (described below) was repeated 100 times and for each iteration the testing performance (accuracy) and 195 (15 ×"
                    }
                ]
            },
            {
                "title": "13)",
                "body": "most important feature pairs were reported.</p><p>First, we partitioned the dataset randomly into two parts: 80% for training and 20% for testing. In the training data, 15 classifiers (<em>Subtype 1</em> vs. <em>Subtype 2</em>, <em>Subtype 1</em> vs. <em>Subtype 3</em>, etc.) were built independently, while simultaneously determining the 13 feature pairs for each classifier. Next, the corresponding classifiers were applied to the testing data to estimate the classifier accuracy.</p><p>Finally, the overall accuracy was reported as the average accuracy from the 100 MCCV iterations. To build the final model and deploy it, all feature pairs from the MCCV iterations were sorted based on frequency and the top 13 most frequent pairs for each of the 15 classifiers were selected resulting in a total of 195 feature pairs (244 marker proteins).</p><p><em>Applying k-TSP classifier to independent validation- and late-stage cohorts datasets</em></p><p>The k-TSP algorithm does not require any data normalization steps. It only compares the quantitative values of the proteins in each pair and assign samples to subtypes based on rules established during training. Thus, the k-TSP algorithm was directly applied to new DIA-MS sample data from two independent NSCLC cohorts after imputation of the missing values with"
            }
        ]
    },
    {
        "title": "1.",
        "body": "Furthermore, the classifier was applied to an external data-dependent acquisition (DDA)-MS data from a NSCLC adenocarcinoma cohort<sup>38</sup>.</p>"
    }
]