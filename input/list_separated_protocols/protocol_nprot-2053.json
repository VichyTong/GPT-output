[
    {
        "title": "**Part I. Computational Analysis for Subtype Identification**",
        "body": "In this section, we will describe the methods used to preprocess the microarray data, merge different gene expression microarray datasets, NMF analysis for the identification of subtypes and SAM analysis to identify subtype-specific gene signature."
    },
    {
        "title": "**A. Preprocessing of Microarray Data**",
        "body": "Preprocess the CEL files from different platforms of Affymetrix microarrays before further analysis. Use R \\(frame work for statistical computing) and Bioconductor<sup>2</sup> \\(open source software for bioinformatics) for the preprocessing."
    },
    {
        "title": "**1. Preprocessing using Bioconductor package \"affy\".**",
        "body": "Make sure that the required CEL files are in the same directory where R has been started. The R code for this step is as follows:\r\n\n\n\r\n\n\nCode for preprocessing CEL files by robust multiarray \\(RMA) statistics\r\n\n\n\r\n\n\n _library\\(affy)_\r\n\n\n _data <- ReadAffy\\()_\r\n\n\n _data_rma <- rma\\(data)_\r\n\n\n _data_exp <- exprs\\(data_rma)_\r\n\n\n \r\n\n\nNote: The expression values are in log<sub>2</sub> scale.\r\n\n\n\r\n\n\nCode for mapping probesets to gene symbol\r\n\n\n _library\\(hgu133plus2.db)_  \r\n\n\n _x = unlist\\(as.list\\(hgu133plus2SYMBOL)_\r\n\n\n \r\n\n\n Note that here \"hgu133plu2.db\" has been used as an example for those microarrays done using Affymetrix GeneChip Human U133Plus 2.0 array. Install and include the relevant library depending on the type of Affymetrix array used. _x_ will contain the gene symbol corresponding each probe.\r\n\n\n \r\n\n\n _data_exp_1 <- cbind\\(x, data_exp)_\r\n\n\n _write.table\\(data_exp_1,\"hgu133plus2_genesonly.txt\", row.names=FALSE,sep=\"\\t\",quote=FALSE)_\r\n\n\n\r\n\n\n This will provide a table of RMA processed gene expression profile data with gene symbols. The samples are in columns and genes are in rows."
    },
    {
        "title": "**2. Correcting batch effect.**",
        "body": "We have microarrays from microdissected  \\(UCSF) PDA performed in different batches \\(years - 2006, 2007 and 2008). Correct batch effects using R based software \"ComBat\":http://jlab.byu.edu/ComBat/Abstract.html <sup>3</sup>. Prepare two files - gene expression index file and sample information file. Gene expression index file is a delimited text file with first column containing gene names or probe IDs and rest of the columns with samples and gene expression indices. Sample information file contains first column with Array name, second column with sample name and third column with batch numbers \\(eg., 1, 2, ...). \r\n\n\n\r\n\n\nDownload and install \"ComBat\":http://jlab.byu.edu/ComBat/Abstract.html as described in the website. Use \"ComBat\":http://jlab.byu.edu/ComBat/Abstract.html  as follows. \r\n\n\n\r\n\n\nNote: Make sure to execute \"ComBat\":http://jlab.byu.edu/ComBat/Abstract.html in its installed directory or include the directory in the _Source_ comment below.\r\n\n\n\r\n\n\n_Source\\(\"ComBat.R\")_\r\n\n\n_ComBat\\(\"your expression file name\", \"your sample information\")_\r\n\n\n\r\n\n\nThe results with batch adjusted data will be written in the same directory."
    },
    {
        "title": "**3. Assessing Array Quality.**",
        "body": "We performed normalized unscaled standard error \\(NUSE)<sup>4</sup> to assess the quality of the arrays. NUSE is available as a part of \"_affyPLM_\":http://www.bioconductor.org/packages/2.6/bioc/vignettes/affyPLM/inst/doc/QualityAssess.pdf \\(a model based quality control assessment of Affymetrix GeneChips) Bioconductor package. Assess microarray quality as follows.\r\n\n\n\r\n\n\n_library\\(affy)_\r\n\n\n_library\\(affyPLM)_\r\n\n\n_data<-ReadAffy\\()_\r\n\n\n\r\n\n\nNote: Make sure that the required CEL files are in the same directory where R has been started. \r\n\n\n\r\n\n\n_Pset<-fitPLM\\(data)_\r\n\n\n\r\n\n\nNote - _fitPLM_ fits a specified robust linear model to the probe level data. It calculates the standard error \\(SE) estimates for each gene on each array.\r\n\n\n\r\n\n\n_NUSE\\(Pset, main = \"NUSE\")_\r\n\n\n\r\n\n\n_NUSE_ accounts for differences in variability between genes across arrays. It standardizes the SE for each gene on each array calculated from _fitPLM_  such that the median SE for that gene is 1 across all arrays. The above comment will produce a graph with y-axis representing the median SE for each array and helps to compare across arrays. Arrays with median SE or NUSE score of lesser than 1 + 0.25 and greater than 1 - 0.25 were further considered as better quality microarrays for our study. \r\n\n\n\r\n\n\nIn addition, obtain the NUSE statistics using the following R code.\r\n\n\n\r\n\n\n_NUSE\\(Pset, type = \"stats\")_\r\n\n\n\r\n\n\nThose arrays with specified NUSE criteria can be used for further analysis."
    },
    {
        "title": "**4. Merging of different microarray datasets.**",
        "body": "We used distance weighted discrimination \\(DWD)<sup>5 6</sup> algorithm to merge different microarray datasets from different microarray platforms or laboratory. For this purpose, download Java based DWD and install it as described on the DWD description page. Before DWD-merging, screen each dataset for probesets/genes with standard deviation \\(SD) greater than 0.8. Also, select unique genes in the case where many probesets represent a single gene. This can be done by selecting only the gene-specific probe with the highest SD among all probes for that given gene. Additionally, remove those probes that do not map to any gene. The R code for this screening is available in the Attachments or Figures section of this article. You can download and execute accordingly. Column \\(samples) normalize \\(N\\(0,1)) and row \\(probe or gene) normalize \\(by median centering) each dataset. Use the R code below for normalizing and merging datasets using DWD.\r\n\n\n\r\n\n\n_library\\(impute)_\r\n\n\n\r\n\n\n_dataUnique<-read.delim\\(\"file name\", stringsAsFactors=FALSE)_\r\n\n\n\r\n\n\nNote - _dataUnique_ should read the file generated from above SD filtering with unique genes as described above. The columns of the tab-delimited file should be samples \\(except first column being gene symbols) and rows should be genes.\r\n\n\n\r\n\n\n_imp<-impute.knn\\(dataUnique)_\r\n\n\n\r\n\n\n Column normalization\r\n\n\n _colMax <- apply\\(dataUnique,2,max, na.rm=TRUE);_\r\n\n\n            _colMin <- apply\\(dataUnique,2,min, na.rm=TRUE);_\r\n\n\n            _scaleFactor <- 1.0/\\(colMax-colMin);_\r\n\n\n            _for \\(i in 1:dim\\(dataUnique) ==\\[== 2]) \\{_\r\n\n\n                _dataUnique\\[,i] <- \\(dataUnique\\[,i]-colMin\\[i])*scaleFactor\\[i];_\r\n\n\n            _}_\r\n\n\n\r\n\n\nRow median centering\r\n\n\n _rowMed <- apply\\(dataUnique,1,median, na.rm=TRUE);_\r\n\n\n _dataUnique<-dataUnique-rowMed_\r\n\n\n_outFile1<- paste\\(strsplit\\(exprFile,\".txt\"),\"_sd\",sdCutoff,\"_col_Norm_row_Med\",\".txt\",sep=\"\");_\r\n\n\n        _dataUnique1<-cbind\\(data\\[,1],dataUnique)_\r\n\n\n        _colnames\\(dataUnique1) ==\\[== 1]<-\"Genes\"_\r\n\n\n\r\n\n\n _write.table\\(file=\"outFile\", dataUnique1, quote=FALSE, row.names=FALSE, sep=\"\\t\");_\r\n\n\n      _}_\r\n\n\n\r\n\n\nNote: Ensure that the final output file is numeric \\(e.g., avoid 1e-2, instead 0.01).\r\n\n\n\r\n\n\nMerge the two individual SD screened and preprocessed datasets using installed Java based \"DWD\":https://genome.unc.edu/dwd/. Remove the second row with dataset identifier added by DWD in the output file. Perform row median centering of the merged dataset before proceeding to the next step."
    },
    {
        "title": "**5. NMF analysis.**",
        "body": "The subtypes of PDA were identified in merged and row median centered microarray datasets using the non-negative matrix factorization \\(NMF) algorithm<sup>1</sup>. R code for the NMF algorithm was downloaded from GenePattern website at the Broad Institute. Perform the NMF analysis as follows:\r\n\n\n\r\n\n\n_source\\(\"/directory/nmfconsensus.R\")_\r\n\n\n\r\n\n\nNote: make sure to include the directory where NMF R code is located. \r\n\n\n\r\n\n\n_nmfconsensus<-\\(input.ds=\"merged file name in tab-delimited format\",k.init=2,k.final=5,num.clusterings=20,maxniter=500, error.function=\"euclidean\")_\r\n\n\n\r\n\n\nThe output graphics and other required files will be saved in the directory where the code is executed. The \"consensus.all.k.plot.pdf\" file provides a sample x sample consensus matrix for different k's and cophentic coefficient plot. Files with names ending with \".gct\" provide the classes for each sample."
    },
    {
        "title": "**SAM Analysis.**",
        "body": "\"Significant analysis of microarrays\":http://www-stat.stanford.edu/~tibs/SAM/ <sup>7</sup> was performed using a Bioconductor package, \"siggenes\":http://www.bioconductor.org/packages/2.0/bioc/html/siggenes.html. The analysis was performed to identify gene signatures specific to each PDA subtypes identified by NMF analysis. Perform the analysis as follows:\r\n\n\n\r\n\n\n_library\\(siggenes)_\r\n\n\n\r\n\n\n_dataMerged<-read.delim\\(\"DWD merged file name\", stringsAsFactors=FALSE)_\r\n\n\n\r\n\n\nNumeric matrix was generated from above file.\r\n\n\n\r\n\n\n_dataMerged_m<-matrix\\(as.numeric\\(unlist\\(dataMerged ==\\[== ,2:dim\\(dataMerged) ==\\[== 2]])),nrow=dim\\(dataMerged) ==\\[== 1], ncol=\\(dim\\(dataMerged) ==\\[== 2])-1)_\r\n\n\n\r\n\n\nNote - The file used for this purpose is DWD merged files in tab-delimited format.\r\n\n\n\r\n\n\n_colnames\\(data_m)<-colnames\\(data)\\[2:\\(dim\\(dataMerged]_\r\n\n\n_rownames\\(data_m)<-data\\[,1]_\r\n\n\n\r\n\n\nReading the classes for each sample from NMF output file\r\n\n\n\r\n\n\n_con<-read.delim\\(\"consensus.k.3.gct\", stringsAsFactors=FALSE)_\r\n\n\n\r\n\n\n_m<-match\\(con\\[,1],colnames\\(dataMerged))_\r\n\n\n\r\n\n\n_dataMerged_m1<-dataMerged_m\\[,m]_\r\n\n\n\r\n\n\n_sam.out<-sam\\(dataMerged_m1,con\\[,2],rand=123,gene.names=rownames\\(dataMerged_m1))_\r\n\n\n\r\n\n\n_genes<-summary\\(sam.out,12.2)@row.sig.genes_ \r\n\n\n\r\n\n\nNote - number \"12.2\" is an example of delta value from SAM analysis and it varies from analysis to analysis and can be chosen based on false discovery rate \\(FDR) and false positive scores. We chose FDR < 0.001 and false positive being almost zero.\r\n\n\n\r\n\n\nFinal dataset with SAM selected genes\r\n\n\n_dataMerged_genes<-cbind\\(rownames\\(dataMerged_m1),dataMerged_m1\\[genes, ])_\r\n\n\n\r\n\n\n_write.table\\(dataMerged_genes,\"SAM genes selected dataset.txt\", sep=\"\\t\", quote=FALSE,row.names=FALSE)_\r\n\n\n\r\n\n\nFinally, generate a Heatmap with above data file using \"Cluster\":http://rana.lbl.gov/EisenSoftware.htm software<sup>8</sup> and viewed using GenePattern's \"Hierarchical Clustering Viewer\":http://www.broadinstitute.org/cgi-bin/cancer/software/genepattern/modules/gp_modules.cgi <sup>9</sup>\r\n\n\n\r\n\n\n Map the signatures from SAM onto other datasets as follows:\r\n\n\n\r\n\n\n_data_others<-read.delim\\(\"other datasets name.txt\", stringsAsFactors=FALSE_\r\n\n\n\r\n\n\n_map<-match\\(names\\(genes),data_others\\[,1])_\r\n\n\n_w<-which\\(\\!is.na\\(map))_\r\n\n\n_data_others_SAM<-data_others\\[map\\[w],]_\r\n\n\n\r\n\n\n_write.table\\(data_others,\"other datasets mapped with PDAssigner genes.txt\",sep=\"\\t\",quote=FALSE,row.names=FALSE)_\r\n\n\n\r\n\n\nPerform the Hierarchical clustering using the procedure described above."
    },
    {
        "title": "**Part II. Statistics for Clinical Outcome.**",
        "body": "Use overall survival data from patients for univariate and multivariate analysis. \r\n\n\n\r\n\n\nUse the log-rank test for univariate associations with survival. Perform survival \\(Kaplan-Meier) curve and log-rank test using web-based GenePattern software SurvivalCurve and SurvivalDifference, respectively. Provide a tab-delimited file with sample id, class for each sample \\(subtype information in our case), censor \\(0 - censored and 1 - not censored) and overall survival \\(in days) as an input for the program.\r\n\n\n\r\n\n\n Use the Cox proportional hazards model for multivariate modeling of survival using the R package _survival_.  \r\n\n\n\r\n\n\n_library\\(survival)_\r\n\n\n\r\n\n\n_sur<-read.delim\\(\"survival.txt\", stringsAsFactors=FALSE)_\r\n\n\n\r\n\n\nNote: _survival.txt_ should have one column each for sample name, class or subtype information, censored data \\(0 - censor, 1 - not censored), time \\(in days, weeks or years), grade, stage in the same order.\r\n\n\n\r\n\n\n_coxph\\(formula = Surv\\(as.numeric\\(sur\\[,4]), as.numeric\\(sur\\[,3]))~as.factor\\(sur\\[,2]), data = sur)_\r\n\n\n\r\n\n\n where sur\\[,4] should be time, sur\\[,3] should be censored data \\(0 or 1), sur\\[,2] should be class or subtype \\(if not in factors, _as.factor_ will convert to factors). Similarly, grade or stage can be analyzed.\r\n\n\n\r\n\n\nApply Fisher’s exact test \\(available in R package, _stats_) to investigate the relationships among subtype, stage and grade."
    }
]