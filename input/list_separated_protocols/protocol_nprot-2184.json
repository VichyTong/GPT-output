[
    {
        "title": "**1. SOAP denovo assembly**",
        "body": [
            "SOAPdenovo employs the de Bruijn graph algorithm in order both to simplify the task of assembly and to reduce computational complexity. Low quality reads were filtered and potential sequencing errors were removed by k-mer frequency-based error correction. We filtered the following type of reads:",
            {
                "title": "1.",
                "body": "Reads having an ‘N’ over 10% of its length."
            },
            {
                "title": "2.",
                "body": "Reads from short insert-size libraries having more than 65% of bases with quality ≤7, and reads from large insert-size libraries that contained more than 80% of bases with a quality ≤"
            },
            {
                "title": "7.",
                "body": []
            },
            {
                "title": "3.",
                "body": "Reads with more than 10 bp from the adapter sequence \\(allowing ≤2 bp mismatches)."
            },
            {
                "title": "4.",
                "body": "Small insert size paired-end reads that overlapped ≥10 bp between two ends."
            },
            {
                "title": "5.",
                "body": "Read1 and read2 of two paired-end reads that were completely identical \\(and were hence considered to be the products of PCR duplication)."
            },
            {
                "title": "6.",
                "body": "Reads having a k-mer frequency <4 \\(to minimize the influence of sequencing errors).\r\n  SOAPdenovo first constructs the _de Bruijn_ graph by splitting the reads from short insert size libraries \\(200-500bp) into 31-mers and then merging the 31-mers \\( 30bp overlaps with 1 bp overhangs); contigs were then collected which exhibited unambiguous connections in _de Bruijn_ graphs. Reads from mate-paired libraries \\(insert size >2k) were aligned onto the contigs for scaffold building using the paired-end information. This paired-end information was subsequently used to link contigs into scaffolds, step by step, from short insert sizes to long insert sizes."
            }
        ]
    },
    {
        "title": "**2.  RNA-seq sequencing**",
        "body": [
            {
                "title": "1|",
                "body": "Homogenise frozen tissues in Trizol reagent in a bead mill with 5mm stainless steel beads."
            },
            {
                "title": "2|",
                "body": "Follow the Trizol procedure, including two alcohol precipitations and suspension of the final RNA pellet in RNAse-free water."
            },
            {
                "title": "3|",
                "body": "Construct RNA sequencing libraries using an Illumina standard mRNA-Seq Prep Kit. Briefly: Use oligo\\(dT) magnetic beads to purify the poly-A containing mRNA molecules. Further fragment the mRNA into short lengths by controlled temperature, and then randomly primed during first strand synthesis by reverse transcription. Follow this with second-strand synthesis with DNA polymerase I to create double-stranded cDNA fragments. Subject double stranded cDNA  to end repair by Klenow and T4 DNA polymerases and A-tailed by Klenow lacking exonuclease activity."
            },
            {
                "title": "4|",
                "body": "Ligation to Illumina Paired-End Sequencing adapters, size selection by gel electrophoresis and then PCR amplification complete the library preparation. Sequence the paired-end libraries sequenced on a Illumina Genome Analyzer for 100 bp at each end."
            }
        ]
    },
    {
        "title": "**3. Gene prediction**",
        "body": "use BLAT to map genes of IR \\(MMUL_0_1) and human \\(Ensembl release-56) onto two macaca genome, Orthologous regions were then determined by best-BLAT hit and synteny-based analysis, followed by the application of \"Exonerate\":http://www.ebi.ac.uk/~guy/exonerate/ and \"GENEWISE\":http://www.ebi.ac.uk/Tools/Wise2/index.html to refine gene model at each locus."
    },
    {
        "title": "**4. Assembly quality validation in neutral mode**",
        "body": "Neutral InDel model1 can be used to validate the quality of our genome assemblies.When aligning two closely related genome sequences, the frequencies of lengths of successive alignment blocks \\(which were split by gaps during the alignment), termed Inter-gap Segments \\(IGS), may be expected to follow a geometric frequency distribution under a standard neutral model.Within the neutral evolving regions, incorrect InDels introduced during the assembly process would result in the observed IGS length distribution departing from the geometric distribution. The introduced InDels would generate an excess of short IGS over the number predicted by the neutral InDel model. By quantifying this excess, several parameters viz. the proportion \\(ɛ), average density \\(D), and number \\(Ng) of the clustered erroneous gaps in the genome alignments can be estimated."
    }
]